<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">cHVibGljIHN0YXRpYyBjbGFzcyBJRGF0YVV0aWxFeHQgewoKCS8qKgoJICogRGF0YSB0eXBlcyBm
b3IgY29udmVyc2lvbi4gU2VlCgkgKiB7QGxpbmsgSURhdGFVdGlsRXh0I3B1dChJRGF0YSwgU3Ry
aW5nLCBPYmplY3QsIERhdGFUeXBlKX0gZm9yIHVzYWdlCgkgKi8KCXB1YmxpYyBlbnVtIERhdGFU
eXBlIHsKCQlERUZBVUxULCBTVFJJTkdfTElTVCwgRE9DVU1FTlRfTElTVAoJfQoKCS8qKgoJICog
UmV0dXJuIHZhbHVlIGZyb20gcGlwZWxpbmUgYXMge0BsaW5rIEludGVnZXJ9LiBTaW1pbGFyIHRv
CgkgKiB7QGxpbmsgSURhdGFVdGlsI2dldEludChJRGF0YUN1cnNvciwgU3RyaW5nLCBpbnQpfSBi
dXQgYWxsb3dzIGZvciBOVUxMIGFzCgkgKiBkZWZhdWx0IHZhbHVlLgoJICogCgkgKiBAcGFyYW0g
cGlwZWxpbmVDdXJzb3IKCSAqIEBwYXJhbSBrZXkKCSAqIEBwYXJhbSBkZWZhdWx0VmFsdWUKCSAq
IEByZXR1cm4KCSAqLwoJcHVibGljIHN0YXRpYyBJbnRlZ2VyIGdldEludChJRGF0YUN1cnNvciBw
aXBlbGluZUN1cnNvciwgU3RyaW5nIGtleSwgSW50ZWdlciBkZWZhdWx0VmFsdWUpIHsKCQlJbnRl
Z2VyIG91dCA9IG51bGw7CgkJU3RyaW5nIHZhbHVlU3RyID0gSURhdGFVdGlsLmdldFN0cmluZyhw
aXBlbGluZUN1cnNvciwga2V5KTsKCQlpZiAodmFsdWVTdHIgIT0gbnVsbCkgewoJCQlvdXQgPSBJ
bnRlZ2VyLnBhcnNlSW50KHZhbHVlU3RyKTsKCQl9IGVsc2UgewoJCQlvdXQgPSBkZWZhdWx0VmFs
dWU7CgkJfQoJCXJldHVybiBvdXQ7Cgl9CgkKCS8qKgoJICogR2V0IGEgdmFsdWUgZnJvbSBhIG5l
c3RlZCBJRGF0YS4gSWYgbm90IGZvdW5kLCBvciBpZiBhbnkgaW50ZXJtZWRpYXRlCgkgKiBJRGF0
YSdzIGFyZSBub3QgZm91bmQsIHdpbGwgcmV0dXJuIG51bGwuCgkgKiBUYWtlbiBmcm9tIFd4SURh
dGEgKGh0dHBzOi8vbGFiY2FzZS5zb2Z0d2FyZWFnLmNvbS9wcm9qZWN0cy93eGlkYXRhL3dpa2kp
CgkgKgoJICogQHBhcmFtIGlkYXRhCgkgKiAgICAgICAgICAgIElEYXRhIGZyb20gd2hpY2ggdG8g
ZXh0cmFjdAoJICogQHBhcmFtIHBhdGgKCSAqICAgICAgICAgICAgUGF0aCB0byB1c2UgZm9yIGV4
dHJhY3Rpb24KCSAqIEByZXR1cm4gcmVzdWx0IG9mIGV4dHJhY3Rpb24KCSAqLwoJcHVibGljIHN0
YXRpYyBPYmplY3QgZ2V0KElEYXRhIGlkYXRhLCBTdHJpbmcgcGF0aCkgewoJCWlmICgoaWRhdGEg
PT0gbnVsbCkgfHwgKHBhdGggPT0gbnVsbCkgfHwgcGF0aC5pc0VtcHR5KCkpIHsKCQkJcmV0dXJu
IG51bGw7CgkJfQoJCUlEYXRhQ3Vyc29yIGN1cnNvciA9IGlkYXRhLmdldEN1cnNvcigpOwoJCXBh
dGggPSBwYXRoLnJlcGxhY2VGaXJzdCgiXi8rIiwgIiIpOwoJCWludCBpbmRleE9mU2VwYXJhdG9y
ID0gcGF0aC5pbmRleE9mKCIvIik7CgkJaWYgKGluZGV4T2ZTZXBhcmF0b3IgIT0gLTEpIHsKCQkJ
U3RyaW5nIG5hbWUgPSBwYXRoLnN1YnN0cmluZygwLCBpbmRleE9mU2VwYXJhdG9yKTsKCQkJSURh
dGEgbm9kZSA9IChJRGF0YSkgSURhdGFVdGlsLmdldChjdXJzb3IsIG5hbWUpOwoJCQlyZXR1cm4g
Z2V0KG5vZGUsIHBhdGguc3Vic3RyaW5nKGluZGV4T2ZTZXBhcmF0b3IsIHBhdGgubGVuZ3RoKCkp
KTsKCQl9IGVsc2UgewoJCQlPYmplY3QgcmV0dXJuT2JqID0gSURhdGFVdGlsLmdldChjdXJzb3Is
IHBhdGgpOwoJCQkvLyBQZXJmb3JtIERlZXAtQ2xvbmUgaWYgb2JqIGlzIGFuIElEYXRhCgkJCWlm
IChyZXR1cm5PYmogaW5zdGFuY2VvZiBJRGF0YSkgewoJCQkJdHJ5IHsKCQkJCQlyZXR1cm5PYmog
PSBJRGF0YVV0aWwuZGVlcENsb25lKChJRGF0YSkgcmV0dXJuT2JqKTsKCQkJCX0gY2F0Y2ggKElP
RXhjZXB0aW9uIGUpIHsKCQkJCQkvLyBUT0RPOiBXaHkgd291bGQgYW4gSU9FeGNlcHRpb24gb2Nj
dXIgPwoJCQkJfQoKCQkJfSAvLyBlbHNlIGlmIChyZXR1cm5PYmogaW5zdGFuY2VvZiBDbG9uZWFi
bGUpIHsKCQkJCS8vIHJldHVybk9iaiA9IHJldHVybk9iai5jbG9uZSgpOwoJCQkJLy8gfQoJCQly
ZXR1cm4gcmV0dXJuT2JqOwoJCX0KCX0KCQoJLyoqCgkgKiBQdXQgYSB2YWx1ZSBpbnRvIGEgbmVz
dGVkIElEYXRhLCBpbnN0YW50aWF0aW5nIGFueSBudWxsIElEYXRhJ3MgYWxvbmcgdGhlCgkgKiB3
YXkuIFRha2VuIGZyb20gV3hJRGF0YQoJICogKGh0dHBzOi8vbGFiY2FzZS5zb2Z0d2FyZWFnLmNv
bS9wcm9qZWN0cy93eGlkYXRhL3dpa2kpCgkgKiAKCSAqIEBwYXJhbSBpZGF0YQoJICogICAgICAg
ICAgICBUYXJnZXQgSURhdGEKCSAqIEBwYXJhbSBwYXRoCgkgKiAgICAgICAgICAgIFBhdGggaW5z
aWRlIHRhcmdldAoJICogQHBhcmFtIHZhbHVlCgkgKiAgICAgICAgICAgIFZhbHVlIHRvIHBsYWNl
CgkgKiBAcGFyYW0gZGF0YVR5cGUKCSAqICAgICAgICAgICAgRGF0YSB0eXBlIHRvIGNvbnZlcnQg
dmFsdWUgdG8gb3B0aW9uYWxseS4gRW5zdXJlcyB0aGF0IGFycmF5cwoJICogICAgICAgICAgICBv
ZiBsZW5ndGggMSBhcmUgbm90IHNpbGVudGx5IGNvbnZlcnRlZCB0byB0aGUgbm9uLWFycmF5IGRh
dGEKCSAqICAgICAgICAgICAgdHlwZQoJICogQHJldHVybiBwcm9jZXNzZWQgSURhdGEKCSAqLwoJ
cHVibGljIHN0YXRpYyBJRGF0YSBwdXQoSURhdGEgaWRhdGEsIFN0cmluZyBwYXRoLCBPYmplY3Qg
dmFsdWUsIERhdGFUeXBlIGRhdGFUeXBlKSB7CgkJaWYgKHBhdGggPT0gbnVsbCB8fCBwYXRoLmlz
RW1wdHkoKSkgewoJCQlyZXR1cm4gaWRhdGE7CgkJfQoJCWlmIChpZGF0YSA9PSBudWxsKSB7CgkJ
CWlkYXRhID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCX0KCQlpZiAoZGF0YVR5cGUgPT0gbnVs
bCkgewoJCQlkYXRhVHlwZSA9IERhdGFUeXBlLkRFRkFVTFQ7CgkJfQoJCQoJCUlEYXRhQ3Vyc29y
IGN1cnNvciA9IGlkYXRhLmdldEN1cnNvcigpOwoJCXBhdGggPSBwYXRoLnJlcGxhY2VGaXJzdCgi
Xi8rIiwgIiIpOyAvLyBSZW1vdmUgYW55IGxlYWRpbmcgLydzCgkJaW50IGluZGV4T2ZTZXBhcmF0
b3IgPSBwYXRoLmluZGV4T2YoIi8iKTsgLy8gR2V0IGluZGV4IG9mIG5leHQgLwoKCQkvLyBJZiB0
aGVyZSBhcmUgc3RpbGwgbW9yZSBsZXZlbHMgaW4gdGhlIHJlbWFpbmluZyBwYXRoCgkJLy8gKGlu
ZGljYXRlZCBieSB0aGUgZXhpc3RlbmNlIG9mIGF0IGxlYXN0IG9uZSBtb3JlIHNlcGFyYXRvcikK
CQlpZiAoaW5kZXhPZlNlcGFyYXRvciAhPSAtMSkgewoKCQkJLy8gR2V0IHRoZSBuYW1lIG9mIHRo
ZSBuZXh0IHBhdGggcGFydAoJCQlTdHJpbmcgbmFtZSA9IHBhdGguc3Vic3RyaW5nKDAsIGluZGV4
T2ZTZXBhcmF0b3IpOwoJCQlJRGF0YSBub2RlID0gbnVsbDsKCgkJCS8vIEdldCB0aGUgSURhdGEg
Y29ycmVzcG9uZGluZyB0byB0aGlzIHBhcnQKCQkJLy8gT3IgY3JlYXRlIGlmIGl0IGRvZXNuJ3Qg
YWxyZWFkeSBleGlzdAoJCQlub2RlID0gKElEYXRhKSBJRGF0YVV0aWwuZ2V0KGN1cnNvciwgbmFt
ZSk7CgkJCWlmIChub2RlID09IG51bGwpIHsKCQkJCW5vZGUgPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7CgkJCQlJRGF0YVV0aWwucHV0KGN1cnNvciwgbmFtZSwgbm9kZSk7CgkJCX0KCgkJCS8vIFJl
Y3Vyc2UgdGhyb3VnaCBmdW5jdGlvbiBhZ2FpbiBmb3IgdGhlIHJlbWFpbmluZyBzdWJ0cmVlCgkJ
CXB1dChub2RlLCBwYXRoLnN1YnN0cmluZyhpbmRleE9mU2VwYXJhdG9yLCBwYXRoLmxlbmd0aCgp
KSwgdmFsdWUsIGRhdGFUeXBlKTsKCgkJCS8vIE5vIG1vcmUgcGF0aCBwYXJ0cywgd2UgYXJlIGF0
IHRoZSAibGVhZiIgb2YgdGhlIHBhdGgKCQkJLy8gU28gcHV0IHRoZSBhY3R1YWwgdmFsdWUgaGVy
ZQoJCX0gZWxzZSB7CgkJCXN3aXRjaCAoZGF0YVR5cGUpIHsKCQkJY2FzZSBTVFJJTkdfTElTVDoK
CQkJCWlmICh2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykgewoJCQkJCXZhbHVlID0gbmV3IFN0cmlu
Z1tdIHsgKFN0cmluZykgdmFsdWUgfTsKCQkJCX0KCQkJCUlEYXRhVXRpbC5wdXQoY3Vyc29yLCBw
YXRoLCB2YWx1ZSk7CgkJCQlicmVhazsKCQkJCQoJCQljYXNlIERPQ1VNRU5UX0xJU1Q6CgkJCQlp
ZiAodmFsdWUgaW5zdGFuY2VvZiBJRGF0YSkgewoJCQkJCXZhbHVlID0gbmV3IElEYXRhW10geyAo
SURhdGEpIHZhbHVlIH07CgkJCQl9CgkJCQlJRGF0YVV0aWwucHV0KGN1cnNvciwgcGF0aCwgdmFs
dWUpOwoJCQkJYnJlYWs7CgoJCQlkZWZhdWx0OgoJCQkJSURhdGFVdGlsLnB1dChjdXJzb3IsIHBh
dGgsIHZhbHVlKTsKCQkJCWJyZWFrOwoJCQl9CgoJCX0KCQlyZXR1cm4gaWRhdGE7Cgl9CgoJCgkv
KioKCSAqIFJlbW92ZSBhbGwgTlVMTCBmaWVsZHMgZnJvbSB7QGxpbmsgSURhdGF9CgkgKiAKCSAq
IEBwYXJhbSBkYXRhCgkgKiAgICAgICAgICAgIElEYXRhIHRvIHByb2Nlc3MKCSAqIEByZXR1cm4g
SURhdGEgd2l0aG91dCBOVUxMIGZpZWxkcwoJICovCglwdWJsaWMgc3RhdGljIElEYXRhIHJlbW92
ZU51bGxWYWx1ZXNSZWN1cnNpdmVseShJRGF0YSBkYXRhKSB7CgkJSURhdGFDdXJzb3IgaWRjID0g
ZGF0YS5nZXRDdXJzb3IoKTsKCQlib29sZWFuIGhhc05leHQgPSBpZGMuZmlyc3QoKTsKCQl3aGls
ZSAoaGFzTmV4dCkgewoJCQlPYmplY3QgZWxlbWVudCA9IGlkYy5nZXRWYWx1ZSgpOwoJCQlpZiAo
ZWxlbWVudCA9PSBudWxsKSB7CgkJCQloYXNOZXh0ID0gaWRjLmRlbGV0ZSgpOwoJCQl9IGVsc2Ug
aWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBJRGF0YSkgewoJCQkJcmVtb3ZlTnVsbFZhbHVlc1JlY3Vy
c2l2ZWx5KChJRGF0YSkgZWxlbWVudCk7CgkJCQloYXNOZXh0ID0gaWRjLm5leHQoKTsKCQkJfSBl
bHNlIGlmIChlbGVtZW50IGluc3RhbmNlb2YgSURhdGFbXSkgewoJCQkJZm9yIChJRGF0YSBkIDog
KElEYXRhW10pIGVsZW1lbnQpIHsKCQkJCQlyZW1vdmVOdWxsVmFsdWVzUmVjdXJzaXZlbHkoKElE
YXRhKSBkKTsKCQkJCX0KCQkJCWhhc05leHQgPSBpZGMubmV4dCgpOwoJCQl9IGVsc2UgewoJCQkJ
aGFzTmV4dCA9IGlkYy5uZXh0KCk7CgkJCX0KCQl9CgkJcmV0dXJuIGRhdGE7Cgl9Cgp9Cgk=</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>java.io.IOException</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Arrays</value>
    <value>java.util.List</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
